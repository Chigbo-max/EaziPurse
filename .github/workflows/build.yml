name: EaziPurse Development Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: testdb
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      PAYSTACK_KEY: ${{ secrets.PAYSTACK_KEY }}
      PAYSTACK_SECRET_KEY: ${{ secrets.PAYSTACK_SECRET_KEY }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: eazi-purse-frontend/package-lock.json

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          python --version
          pipenv --version
          which python
          which pipenv
          echo "=== Pipenv environment ==="
          pipenv --support

      - name: Install backend dependencies
        run: |
          cd WalletAppInDjango
          pipenv --rm || true
          pipenv lock --clear
          pipenv install --dev
          echo "=== Installed packages ==="
          pipenv run pip list
          echo "=== Virtual environment info ==="
          pipenv --venv
          pipenv run which python
          echo "Virtual environment path: $(pipenv --venv)"
          echo "=== Checking if Django is in Pipfile ==="
          cat Pipfile
          echo "=== Checking if Django is in Pipfile.lock ==="
          grep -i django Pipfile.lock || echo "Django not found in Pipfile.lock"
          echo "=== Pipenv graph ==="
          pipenv graph
          echo "=== Pipenv environment ==="
          pipenv --support

      - name: Create environment file for Django
        run: |
          cd WalletAppInDjango
          cat > .env.development << EOF
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DB_NAME=testdb
          DB_USER=postgres
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=localhost
          DB_PORT=5432
          PAYSTACK_KEY=${{ secrets.PAYSTACK_KEY }}
          PAYSTACK_SECRET_KEY=${{ secrets.PAYSTACK_SECRET_KEY }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          EOF

      - name: Install frontend dependencies
        run: |
          cd eazi-purse-frontend
          npm ci

      - name: Run frontend linting
        run: |
          cd eazi-purse-frontend
          npm run lint

      - name: Debug directory structure
        run: |
          pwd
          ls -la
          ls -la WalletAppInDjango/

      - name: Verify Django installation
        run: |
          cd WalletAppInDjango
          pipenv run python --version
          pipenv run python -c "import sys; print('Python executable:', sys.executable)"
          pipenv run python -c "import sys; print('Python path:', sys.path)"
          echo "=== Trying to import Django ==="
          pipenv run python -c "import django; print('Django version:', django.get_version())" || echo "Django not found, installing manually..."
          pipenv run python -c "import rest_framework; print('DRF version:', rest_framework.VERSION)" || echo "DRF not found"
          pipenv run python -c "import djoser; print('Djoser available')" || echo "Djoser not found"
          pipenv run python -c "import psycopg2; print('psycopg2 available')" || echo "psycopg2 not found"

      - name: Install Django manually if needed
        run: |
          cd WalletAppInDjango
          pipenv run pip install django djangorestframework djoser djangorestframework-simplejwt drf-yasg django-cors-headers python-dotenv psycopg2-binary reportlab
          echo "=== After manual installation ==="
          pipenv run pip list | grep -i django || echo "Django still not found"
          echo "=== Virtual environment packages ==="
          pipenv run pip freeze

      - name: Test Django import
        run: |
          cd WalletAppInDjango
          echo "=== Testing Django import with correct Python path ==="
          echo "=== Checking directory names ==="
          ls -la | grep -i eazi
          echo "=== Checking eaziPurse directory contents ==="
          ls -la eaziPurse/
          echo "=== Testing module import with importlib ==="
          pipenv run python -c "
          import os
          import sys
          import importlib
          import django
          # Add current directory to Python path
          sys.path.insert(0, os.getcwd())
          print('Current directory:', os.getcwd())
          print('Python path:', sys.path)
          print('Available modules:', [d for d in os.listdir('.') if os.path.isdir(d) and not d.startswith('.')])
          try:
              eaziPurse_module = importlib.import_module('eaziPurse')
              print('eaziPurse module imported successfully:', eaziPurse_module)
              settings_module = importlib.import_module('eaziPurse.settings')
              print('Settings module imported successfully:', settings_module)
          except Exception as e:
              print('Module import failed:', e)
          os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'eaziPurse.settings')
          django.setup()
          print('Django setup successful!')
          "

      - name: Wait for database
        run: |
          cd WalletAppInDjango
          pipenv run python -c "
          import time
          import psycopg2
          import os
          import sys
          
          # Add current directory to Python path
          sys.path.insert(0, os.getcwd())
          
          for i in range(30):
              try:
                  conn = psycopg2.connect(
                      host='localhost',
                      port='5432',
                      database='testdb',
                      user='postgres',
                      password='${{ secrets.DB_PASSWORD }}'
                  )
                  conn.close()
                  print('Database is ready!')
                  break
              except Exception as e:
                  print(f'Waiting for database... ({i+1}/30)')
                  time.sleep(2)
          else:
              raise Exception('Database connection failed after 30 attempts')
          "

      - name: Check Django configuration
        run: |
          cd WalletAppInDjango
          echo "=== Checking Django project structure ==="
          ls -la
          echo "=== Checking eaziPurse directory ==="
          ls -la eaziPurse/
          echo "=== Checking if settings.py exists ==="
          ls -la eaziPurse/settings.py
          echo "=== Testing settings import ==="
          pipenv run python -c "
          import os
          import sys
          sys.path.insert(0, os.getcwd())
          try:
              import eaziPurse.settings
              print('Settings import successful!')
          except Exception as e:
              print('Settings import failed:', e)
          "
          echo "=== Testing direct module import ==="
          pipenv run python -c "
          import os
          import sys
          sys.path.insert(0, os.getcwd())
          try:
              import eaziPurse
              print('eaziPurse module import successful!')
              print('eaziPurse module contents:', dir(eaziPurse))
          except Exception as e:
              print('eaziPurse module import failed:', e)
          "
          echo "=== Checking __init__.py files ==="
          ls -la eaziPurse/__init__.py
          cat eaziPurse/__init__.py
          echo "=== Running Django check ==="
          pipenv run python manage.py check

      - name: Run backend tests
        run: |
          cd WalletAppInDjango
          pwd
          ls -la
          pipenv run python manage.py test

      - name: Run backend migrations
        run: |
          cd WalletAppInDjango
          pipenv run python manage.py migrate

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push full application
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eazipurse:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/eazipurse:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
